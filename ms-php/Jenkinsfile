pipeline  {
    agent any

    environment {

        TOKEN = "6476965277:AAGbiC51dS9RwGVo7y68OUJ3A1m5SbXVS4A"
        CHAT_ID = "-4002181219"

        // Telegram Message Pre Build
        CURRENT_BUILD_NUMBER = "${currentBuild.number}"
        GIT_INFO = "Hello from dual gaming "
        TEXT_BREAK = "--------------------------------------------------------------"
        TEXT_PRE_BUILD = "${TEXT_BREAK}\n${GIT_INFO}\n${JOB_NAME} is Building \n ${CURRENT_BUILD_NUMBER}"

        // Telegram Message Success and Failure
        TEXT_SUCCESS_BUILD = "${JOB_NAME} is Success"
        TEXT_FAILURE_BUILD = "${JOB_NAME} is Failure"
        USERHUB = credentials('DOCKER_REGISTRY_URL')
        SERVER_SWARM="ubuntu@ec2-13-215-45-136.ap-southeast-1.compute.amazonaws.com"
        ARTIFACT = "php"
        NUMBER = "${CURRENT_BUILD_NUMBER}"
        STACK_NAME = "assessment3"
    }

    

    stages {

        // stage('Branch'){
        //     steps {
        //         echo "branch ${params.branchName.split('/').last()}"
        //     }
        // }
        stage('checkout code') {
            steps {
                // checkout scmGit(branches: [[name: "${params.branchName.split('/').last()}"]], extensions: [], userRemoteConfigs: [[url: 'https://github.com/error404100230/php-docker']])
                  checkout scmGit(branches: [[name: 'main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/error404100230/php-docker']])
          
            }
        }
        
        stage('build image') {
            steps {
                sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='${TEXT_PRE_BUILD}' --form chat_id='${CHAT_ID}'"
                 withCredentials([string(credentialsId: 'DOCKER_REGISTRY_URL', variable: 'DOCKER_REGISTRY_URL')]) {
                      sh 'docker build -t ${DOCKER_REGISTRY_URL}/php:$BUILD_NUMBER .'
                 }
            }
        }
        stage('push image to hub') {
            steps {
              withCredentials([string(credentialsId: 'DOCKER_REGISTRY_URL', variable: 'DOCKER_REGISTRY_URL'), string(credentialsId: 'docker-hub-id', variable: 'hubpwd')]) {
                  
                  sh 'docker login -u ${DOCKER_REGISTRY_URL} -p ${hubpwd}'

                  sh 'docker push ${DOCKER_REGISTRY_URL}/php:$BUILD_NUMBER'

                  sh 'docker image rm ${DOCKER_REGISTRY_URL}/php:$BUILD_NUMBER';
              }
            }
        }

        stage('deploy swarm container') {
            steps {
                 script {
        
                    def currentDir = pwd()
                    echo "Current directory: ${currentDir}"
                    sh "scp  ${currentDir}/docker-compose.yml ubuntu@ec2-13-215-45-136.ap-southeast-1.compute.amazonaws.com:${currentDir}"
                    echo '${env.STACK_NAME}'
                    // sh "docker stack deploy -c docker-compose.yml '${env.STACK_NAME}'"
                     sh "ssh ${env.SERVER_SWARM}  'USERHUB=${env.USERHUB} ARTIFACT=${env.ARTIFACT} NUMBER=${env.NUMBER} docker stack deploy -c ${currentDir}/docker-compose.yml ${env.STACK_NAME}'"
                }
                
            }
        }

    }

    post {
        success {
            script{
               sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='${TEXT_SUCCESS_BUILD}' --form chat_id='${CHAT_ID}'"
            }
        }
        failure {
            script{
                sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='${TEXT_FAILURE_BUILD}' --form chat_id='${CHAT_ID}'"
            }
        }
    }
}
