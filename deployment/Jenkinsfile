pipeline  {
    agent any

    environment {
        TOKEN = "6476965277:AAGbiC51dS9RwGVo7y68OUJ3A1m5SbXVS4A"
        CHAT_ID = "-4002181219"

        // Telegram Message Pre Build
        CURRENT_BUILD_NUMBER = "${currentBuild.number}"
        GIT_INFO = "Hello from dual gaming "
        TEXT_BREAK = "--------------------------------------------------------------"
        TEXT_PRE_BUILD = "${TEXT_BREAK}\n${GIT_INFO}\n${JOB_NAME} is Building \n ${CURRENT_BUILD_NUMBER}"

        // Telegram Message Success and Failure
        TEXT_SUCCESS_BUILD = "${JOB_NAME} is Success"
        TEXT_FAILURE_BUILD = "${JOB_NAME} is Failure"
        USERHUB = credentials('DOCKER_REGISTRY_URL')
        ARTIFACT = "java"
        NUMBER = "${CURRENT_BUILD_NUMBER}"
        STACK_NAME = "assessment3"
    }

    

    stages {
        stage('checkout code') {
            steps {
                checkout scmGit(branches: [[name: "${params.branchName.split('/').last()}"]], extensions: [], userRemoteConfigs: [[url: 'https://github.com/error404100230/java-docker']])
          
            }
        }

        stage('deploy swarm container') {
            steps {
                script {
                    echo '${env.STACK_NAME}'
                    sh "docker stack deploy -c docker-compose.yml '${env.STACK_NAME}'"
                }
                
            }
        }
        
    }

    post {
        success {
            script{
               sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='${TEXT_SUCCESS_BUILD}' --form chat_id='${CHAT_ID}'"
            }
        }
        failure {
            script{
                sh "curl --location --request POST 'https://api.telegram.org/bot${TOKEN}/sendMessage' --form text='${TEXT_FAILURE_BUILD}' --form chat_id='${CHAT_ID}'"
            }
        }
    }
}
